expSamples <- indata[,na.omit(match(gsub(",|-",".",sort(metadata$SampleID[metadata$SampleType=="Experimental"])),substring(colnames(indata),5)))]
ctlSamples <-indata[,na.omit(match(gsub(",|-",".",sort(metadata$SampleID[metadata$SampleType=="ControlN"])),substring(colnames(indata),5)))]
#Filter 1 - minimum number of reads for any ID
expSamples[expSamples< minreads] <- 0
expSamples <- expSamples[rowSums(expSamples) > 0,]
controlsCONTAM <- ctlSamples[rowSums(ctlSamples) > 0,]
for (contamOTU in 1:length(controlsCONTAM[,1])){
loopOTU <- row.names(controlsCONTAM[contamOTU,])
loopMax <- max(as.numeric(controlsCONTAM[contamOTU,]))
#loopSum <- sum(as.numeric(controlsCONTAM[contamOTU,]))
if (any(is.na(expSamples[loopOTU,]))){next}
expSamples[loopOTU,expSamples[loopOTU,]<loopMax] <- 0
print(paste("Cleaning contaminants",contamOTU))
}
size <- rbind("EUK"=c(75,150),"RIZ"=c(75,140))
rawSeqs <- as.character(readDNAStringSet(paste0("rawdata/ASVs/",datasetname,".DADA2.ASVs.fasta")))
greenlistLength <- names(rawSeqs[nchar(rawSeqs)>size[datasetname,1] & nchar(rawSeqs)<size[datasetname,2]])
rownames(expSamples) %in% greenlistLength
table(rownames(expSamples) %in% greenlistLength)
expSamples <- expSamples[rownames(expSamples) %in% greenlistLength,]
for (dataset in list.files("rawdata",pattern="....raw.names.csv")){
datasetname <- substr(dataset,1,3)
indata <- read.csv(paste0("rawdata/",datasetname,".raw.names.csv"),row.names = 1)
expSamples <- indata[,na.omit(match(gsub(",|-",".",sort(metadata$SampleID[metadata$SampleType=="Experimental"])),substring(colnames(indata),5)))]
ctlSamples <-indata[,na.omit(match(gsub(",|-",".",sort(metadata$SampleID[metadata$SampleType=="ControlN"])),substring(colnames(indata),5)))]
#Filter 1 - minimum number of reads for any ID
expSamples[expSamples< minreads] <- 0
expSamples <- expSamples[rowSums(expSamples) > 0,]
#####NOTE - we are not running this filter as we want to be V sensitive!
#Filter 2 - within samples OTU must appear in more than one sample (this works because there are lots of reps per site and sample)
#filtersam <- expSamples
#filtersam[filtersam>0 ] <- 1
#filtersam <-filtersam[rowSums(filtersam) > 1,]
#expSamples <- expSamples[rownames(expSamples) %in% rownames(filtersam),]
#Filter 3 -Maximum value in neg = 0 value in samples
controlsCONTAM <- ctlSamples[rowSums(ctlSamples) > 0,]
for (contamOTU in 1:length(controlsCONTAM[,1])){
loopOTU <- row.names(controlsCONTAM[contamOTU,])
loopMax <- max(as.numeric(controlsCONTAM[contamOTU,]))
#loopSum <- sum(as.numeric(controlsCONTAM[contamOTU,]))
if (any(is.na(expSamples[loopOTU,]))){next}
expSamples[loopOTU,expSamples[loopOTU,]<loopMax] <- 0
print(paste("Cleaning contaminants",contamOTU))
}
##Filter 4 - exclude OTUs/ASVS outside of a size range
size <- rbind("EUK"=c(75,150),"RIZ"=c(75,140))
rawSeqs <- as.character(readDNAStringSet(paste0("rawdata/ASVs/",datasetname,".DADA2.ASVs.fasta")))
greenlistLength <- names(rawSeqs[nchar(rawSeqs)>size[datasetname,1] & nchar(rawSeqs)<size[datasetname,2]])
expSamples <- expSamples[rownames(expSamples) %in% greenlistLength,]
##### make a version of the data with Nreps
expSamplesNreps <- NrepsMaker(expSamples,gsub("(^.*)[.][0-9]$","\\1",colnames(expSamples)))
#Reattach taxonomy and ASVs
rawSeqs <- as.character(readDNAStringSet(paste0("rawdata/ASVs/",datasetname,".DADA2.ASVs.fasta")))
Assignments <- read.csv(paste0("taxonomy/",datasetname,".parsed.csv"),row.names = 1)
CleanedOutput <- cbind(expSamples,
unname(rawSeqs)[match(row.names(expSamples),names(rawSeqs))],
Assignments[match(row.names(expSamples),Assignments$OTU),])
dir.create("cleanedData",showWarnings = F)
cleanSeqs <- unname(rawSeqs)[match(row.names(expSamples),names(rawSeqs))]
write.csv(CleanedOutput,paste0("cleanedData/clean.",dataset,".csv"))
CleanedNrepsOutput <- cbind(expSamplesNreps,
unname(rawSeqs)[match(row.names(expSamplesNreps),names(rawSeqs))],
Assignments[match(row.names(expSamplesNreps),Assignments$OTU),])
write.csv(CleanedNrepsOutput,paste0("cleanedData/clean.",dataset,".Nreps.csv"))
}
####====0.0 Packages====####
library(tidyverse)
library(dplyr)
library(maditr)
library(vegan)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
View(euk)
rstudioapi::writeRStudioPreference("data_viewer_max_columns", 1000L)
View(euk)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
#Correct col names
colnames(euk) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88]))),colnames(euk[,89:99]))
colnames(euk.Nreps) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk.Nreps[,1:11]))),colnames(euk.Nreps[,12:22]))
View(euk)
View(euk)
View(euk)
View(euk.Nreps)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
View(euk)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
#Correct col names
colnames(euk) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88]))),colnames(euk[,89:99]))
colnames(euk.Nreps) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk.Nreps[,1:11]))),colnames(euk.Nreps[,12:22]))
euk.Nreps.high.binary.1rep <- euk.Nreps.high
euk.Nreps.high.binary.1rep <- euk.Nreps.high
euk.Nreps.high.binary.1rep <- euk.Nreps.high
euk.Nreps.high.binary.3rep <- euk.Nreps.high
euk.Nreps.high.binary.8rep <- euk.Nreps.high
View(euk.Nreps)
euk.Nreps.high.binary.1rep <- euk.Nreps.high
euk.Nreps.high.binary.1rep[euk.Nreps.high.binary.1rep<0] <- 0
euk.Nreps.high.binary.1rep[euk.Nreps.high.binary.1rep>0.5] <- 1
euk.Nreps.high.binary.1rep <- euk.Nreps
euk.Nreps.high.binary.1rep[euk.Nreps.high.binary.1rep<0] <- 0
euk.Nreps.high.binary.1rep[euk.Nreps.high.binary.1rep>0.5] <- 1
View(euk.Nreps.high.binary.1rep)
View(euk)
View(euk.Nreps)
View(euk.Nreps.high.binary.1rep)
View(euk.Nreps)
View(euk.Nreps.high.binary.1rep)
euk.Nreps.high.binary.3rep <- euk.Nreps
euk.Nreps.high.binary.3rep[euk.Nreps.high.binary.3rep<2] <- 0
euk.Nreps.high.binary.3rep[euk.Nreps.high.binary.3rep>2.5] <- 1
View(euk.Nreps.high.binary.3rep)
View(euk.Nreps)
View(euk.Nreps.high.binary.3rep)
euk.Nreps.high.binary.3rep <- euk.Nreps
euk.Nreps.high.binary.3rep[euk.Nreps.high.binary.3rep<3] <- 0
euk.Nreps.high.binary.3rep[euk.Nreps.high.binary.3rep>2.5] <- 1
View(euk.Nreps)
View(euk.Nreps.high.binary.3rep)
View(euk.Nreps)
View(euk.Nreps.high.binary.3rep)
View(euk.Nreps)
euk.Nreps.high.binary.8rep <- euk.Nreps
euk.Nreps.high.binary.8rep[euk.Nreps.high.binary.8rep<8] <- 0
euk.Nreps.high.binary.8rep[euk.Nreps.high.binary.8rep>7.5] <- 1
View(euk.Nreps.high.binary.8rep)
View(euk.Nreps)
View(euk.Nreps.high.binary.8rep)
View(euk.Nreps)
euk.Nreps.high.binary.1rep <- euk.Nreps[,1:11]
euk.Nreps.high.binary.1rep[euk.Nreps.high.binary.1rep>0.5] <- 1
euk.Nreps.high.binary.3rep <- euk.Nreps[,1:11]
euk.Nreps.high.binary.3rep[euk.Nreps.high.binary.3rep<3] <- 0
euk.Nreps.high.binary.3rep[euk.Nreps.high.binary.3rep>2.5] <- 1
euk.Nreps.high.binary.8rep <- euk.Nreps[,1:11]
euk.Nreps.high.binary.8rep[euk.Nreps.high.binary.8rep<8] <- 0
euk.Nreps.high.binary.8rep[euk.Nreps.high.binary.8rep>7.5] <- 1
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
dev.off()
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(3,1))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
par(mar=c(5.1,2.1,1.1,1.1),mfrow=c(3,1))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.3rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.8rep),las=2,cex.axis=1)
dates <-read.csv("metadataAge.csv")
View(dates)
dates$Sample
gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample)),colnames(dates$Sample))
gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample))
dates <-sampleID <- gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample))
dates <-read.csv("metadataAge.csv")
dates <-dates$sampleID <- gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample))
dates <-read.csv("metadataAge.csv")
dates$sampleID <- gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample))
View(dates)
colSums(euk.Nreps.high.binary.1rep)
plot(dates$Median,colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
dates$Median
dates$sampleID
match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)
dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)]
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
dates$sampleID
dev.off()
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
par(mar=c(5.1,2.1,1.1,1.1),mfrow=c(3,1))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
par(mar=c(5.1,2.1,1.1,1.1),mfrow=c(1,3))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
View(euk)
?rarecurve
rarecurve(uk[,1:88],step=10000)
rarecurve(euk[,1:88],step=10000)
rarecurve(t(euk[,1:88]),step=10000)
dev.off()
rarecurve(t(euk[,1:88]),step=10000)
install.packages("breakaway")
library(breakaway)
install.packages("phyloseq")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
install.packages("phyloseq")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
View(euk.Nreps)
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
View(euk)
colSums(euk[,1:10])
colSums(euk[,1:88])
plot(colSums(euk[,1:88]))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
plot(colSums(euk.Nreps.high.binary.1rep),colSums(euk.Nreps.high.binary.3rep),)
plot(colSums(euk.Nreps.high.binary.1rep),colSums(euk.Nreps.high.binary.8rep),)
View(euk.Nreps.high.binary.1rep)
View(euk.Nreps)
library(breakaway)
dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)]
breakaway(euk[,1:88])
test <- breakaway(euk[,1:88])
unlist(test)
plot(test)
str(test)
?breakaway
test2 <- breakaway_nof1(euk[,1:88])
plot(test,test2)
plot(test)
plot(test2)
?testDiversity
citation(breakaway())
citation(breakaway
)
citation(breakaway)
citation("breakaway")
table(euk)
table(euk[,1])
test <- breakaway(euk[,1:88])
plot(test)
plot(test)
test2 <- breakaway_nof1(euk[,1:88])
plot(test2)
plot(breakaway(euk[,1:88]))
plot(breakaway(euk))
plot(test)
test
dirtydatat <- read.csv(file = "rawdata/EUK.raw.wTAX.csv")
View(dirtydatat)
dirtydatat <- read.csv(file = "rawdata/EUK.raw.wTAX.csv",colnames=1)
View(dirtydatat)
dirtydatat <- read.csv(file = "rawdata/EUK.raw.wTAX.csv",colnames=1)[,1:117]
dirtydatat <- read.csv(file = "rawdata/EUK.raw.wTAX.csv",col.names=1)[,1:117]
dirtydatat <- read.csv(file = "rawdata/EUK.raw.wTAX.csv",row.names=1)[,1:117]
View(dirtydatat)
dirtydatat <- read.csv(file = "rawdata/EUK.raw.wTAX.csv",row.names=1)[,1:116]
View(dirtydatat)
plot(breakaway(dirtydatat))
plot(breakaway_nof1(dirtydatat))
View(dirtydatat)
plot(breakaway_nof1(dirtydatat))
plot(breakaway_nof1(dirtydatat),ylim=c(0,4000))
plot(breakaway(dirtydatat),ylim=c(0,4000))
plot(breakaway(dirtydatat))+ylim=c(0,4000)
test3 <- breakaway(dirtydatat)
plot(test3)+ylim=c(0,4000)
plot(test3)
str(test3)
View(dirtydatat)
test <- breakaway(euk[,1:88])
richEst <- breakaway(euk[,1:88])
richEst2 <-as.data.frame(richEst)
sapply(richEst,"]",estimate)
blist <- lapply(
X = richEst,
FUN = function(x){x[["estimate"]]}
)
blist <- lapply(richEst,FUN = function(x){x[["estimate"]]})
blist <- unlist(lapply(richEst,FUN = function(x){x[["estimate"]]}))
blist
plot(blist)
blist <- unlist(lapply(richEst,FUN = function(x){x[["ci"]]}))
blist
blist <- unlist(lapply(richEst,FUN = function(x){x[["ci"]][1]}))
blist
richEstimate <- unlist(lapply(richEst,FUN = function(x){x[["estimate"]]}))
richEstimateCIupr <- unlist(lapply(richEst,FUN = function(x){x[["ci"]][1]}))
richEstimateCIlwr <- unlist(lapply(richEst,FUN = function(x){x[["ci"]][2]}))
richEstimateCIlwr
richEstimateCIupr
substr(names(richEstimate),1,8)
plot(as.factor(substr(names(richEstimate),1,8)),richEstimate)
dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)]
plot(dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)],richEstimate)
plot(dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)],richEstimate,pch=16)
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
plot(dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)],richEstimate,pch=16)
plot(dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)],
richEstimate,pch=16,
xlab="CalYrBP")
plot(dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)],
richEstimate,pch=16,
xlab="CalYrBP",
ylab="EstimatedRichness")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.3rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.8rep),las=2,cex.axis=1)
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
pdf("figures/richness.sample.pdf",width = 6.5,height = 5)
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.3rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.8rep),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.date.pdf",width = 6.5,height = 5)
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
dev.off()
pdf("figures/richness.sample.pdf",width = 6.5,height = 5)
par(mar=c(6.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.3rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.8rep),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.sample.pdf",width = 8,height = 5)
par(mar=c(6.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(colSums(euk.Nreps.high.binary.1rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.1rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.3rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.3rep),las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary.8rep),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary.8rep),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.date.pdf",width = 8,height = 5)
par(mar=c(5.1,4.1,1.1,1.1),mfrow=c(1,3))
plot(dates$Median[match(colnames(euk.Nreps.high.binary.1rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.1rep),
pch=16,cex=1.5,ylab="ASV Richness (1rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.3rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.3rep),
pch=16,cex=1.5,ylab="ASV Richness (3rep)",xlab="CalYrBP")
plot(dates$Median[match(colnames(euk.Nreps.high.binary.8rep),dates$sampleID)],
colSums(euk.Nreps.high.binary.8rep),
pch=16,cex=1.5,ylab="ASV Richness (8rep)",xlab="CalYrBP")
dev.off()
pdf("figures/richness.freqEst.pdf",width = 8,height = 5)
plot(dates$Median[match(as.factor(substr(names(richEstimate),1,8)),dates$sampleID)],
richEstimate,pch=16,
xlab="CalYrBP",
ylab="EstimatedRichness")
dev.off()
####====0.0 Packages====####
library(tidyverse)
library(dplyr)
library(maditr)
library(vegan)
library(breakaway)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
dates <-read.csv("metadataAge.csv")
dates$sampleID <- gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample))
taxPR2 <-read.csv("rawdata/")
taxPR2 <-read.csv("taxonomy/tax.PR2.csv")
View(taxPR2)
table(taxPR2$Class)
View(taxPR2)
taxPR2 <-read.csv("taxonomy/tax.PR2.csv",row.names = 1)
View(taxPR2)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
dates <-read.csv("metadataAge.csv")
dates <-read.csv("metadataAge.csv")
dates$sampleID <- gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1", dates$Sample))
rm(list = ls())
