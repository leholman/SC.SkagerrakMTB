out$points[i+1,1],
out$points[i+1,2],
length = 0.1,lwd = 1.5,col = "grey40")}
points(out$points[,1],out$points[,2],col="#4583C4",cex=1.4,pch=16,)
text(out$points[,1],
out$points[,2]+0.1,
labels = rownames(out$points),
col="darkblue")
legend("bottomleft",paste0("stress = ",round(out$stress,3)),bty="n")
box()
dev.off()
MTB.DS2.nMDS.j <- out
##PCOA bray
pdf("figures/figure4/beta.MTB.DS2.M.b.pdf",height = 5,width = 5,bg = "transparent")
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(PCOA.b$vectors[,1],PCOA.b$vectors[,2],col="#d55e00",cex=1.3,pch=16,
ylim=c(min(PCOA.b$vectors[,2])-0.1,max(PCOA.b$vectors[,2])+0.1),
xlim=c(min(PCOA.b$vectors[,1])-0.1,max(PCOA.b$vectors[,1])+0.1),ylab="",xlab="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
points(PCOA.b$vectors[,1],PCOA.b$vectors[,2],col="#d55e00",cex=1.3,pch=16,)
for (i in 1:(length(PCOA.b$vectors[,1])-1)) {
arrows(PCOA.b$vectors[i,1],
PCOA.b$vectors[i,2],
PCOA.b$vectors[i+1,1],
PCOA.b$vectors[i+1,2],
length = 0.1,lwd = 1.5,col = "grey40")}
points(PCOA.b$vectors[,1],PCOA.b$vectors[,2],col="#4583C4",cex=1.4,pch=16,)
text(PCOA.b$vectors[,1],
PCOA.b$vectors[,2]+0.1,
labels = rownames(PCOA.b$vectors),
col="darkblue")
legend("bottomleft",c(paste0("X=",round(PCOA.b$values$Relative_eig[1]*100,1),"%"),paste0("Y=",round(PCOA.b$values$Relative_eig[2]*100,1),"%")),bty="n")
box()
dev.off()
MTB.DS2.MDS.b <- PCOA.b
##PCOA jaccard
pdf("figures/figure4/beta.MTB.DS2.M.j.pdf",height = 5,width = 5,bg = "transparent")
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(PCOA.j$vectors[,1],PCOA.j$vectors[,2],col="#d55e00",cex=1.3,pch=16,
ylim=c(min(PCOA.j$vectors[,2])-0.1,max(PCOA.j$vectors[,2])+0.1),
xlim=c(min(PCOA.j$vectors[,1])-0.1,max(PCOA.j$vectors[,1])+0.1),ylab="",xlab="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
points(PCOA.j$vectors[,1],PCOA.j$vectors[,2],col="#d55e00",cex=1.3,pch=16,)
for (i in 1:(length(PCOA.j$vectors[,1])-1)) {
arrows(PCOA.j$vectors[i,1],
PCOA.j$vectors[i,2],
PCOA.j$vectors[i+1,1],
PCOA.j$vectors[i+1,2],
length = 0.1,lwd = 1.5,col = "grey40")}
points(PCOA.j$vectors[,1],PCOA.j$vectors[,2],col="#4583C4",cex=1.4,pch=16,)
text(PCOA.j$vectors[,1],
PCOA.j$vectors[,2]+0.1,
labels = rownames(PCOA.j$vectors),
col="darkblue")
legend("bottomleft",c(paste0("X=",round(PCOA.j$values$Relative_eig[1]*100,1),"%"),paste0("Y=",round(PCOA.j$values$Relative_eig[2]*100,1),"%")),bty="n")
box()
dev.off()
MTB.DS2.MDS.j <- PCOA.j
##Procrustes bray-nMDS
#MTB.DS1 vs MTG.DS1
proc <- procrustes(MTB.DS1.nMDS.b$points,MTG.DS1.nMDS.b$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.nMDS.b$points,MTG.DS1.nMDS.b$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS1.NM.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS1 vs MTG.DS2
proc <- procrustes(MTB.DS1.nMDS.b.sm$points,MTG.DS2.nMDS.b$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.nMDS.b.sm$points,MTG.DS2.nMDS.b$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS2.NM.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS1
proc <- procrustes(MTB.DS2.nMDS.b$points,MTG.DS1.nMDS.b$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.nMDS.b$points,MTG.DS1.nMDS.b$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS1.NM.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS2
proc <- procrustes(MTB.DS2.nMDS.b.sm$points,MTG.DS2.nMDS.b$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.nMDS.b.sm$points,MTG.DS2.nMDS.b$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS2.NM.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#Procrustes jaccard-nMDS
#MTB.DS1 vs MTG.DS1
proc <- procrustes(MTB.DS1.nMDS.j.sm$points,MTG.DS1.nMDS.j$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.nMDS.j.sm$points,MTG.DS1.nMDS.j$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS1.NM.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS1 vs MTG.DS2
proc <- procrustes(MTB.DS1.nMDS.j.sm$points,MTG.DS2.nMDS.j$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.nMDS.j.sm$points,MTG.DS2.nMDS.j$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS2.NM.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS1
proc <- procrustes(MTB.DS2.nMDS.j.sm$points,MTG.DS1.nMDS.j$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.nMDS.j.sm$points,MTG.DS1.nMDS.j$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS1.NM.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS2
proc <- procrustes(MTB.DS2.nMDS.j.sm$points,MTG.DS2.nMDS.j$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.nMDS.j.sm$points,MTG.DS2.nMDS.j$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS2.NM.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#Procrustes bray-PCoA
#MTB.DS1 vs MTG.DS1
proc <- procrustes(MTB.DS1.MDS.b$vectors[,1:2],MTG.DS1.MDS.b$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.MDS.b$vectors[,1:2],MTG.DS1.MDS.b$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS1.M.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS1 vs MTG.DS2
proc <- procrustes(MTB.DS1.MDS.b.sm$vectors[,1:2],MTG.DS2.MDS.b$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.MDS.b.sm$vectors[,1:2],MTG.DS2.MDS.b$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS2.M.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS1
proc <- procrustes(MTB.DS2.MDS.b$vectors[,1:2],MTG.DS1.MDS.b$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.MDS.b$vectors[,1:2],MTG.DS1.MDS.b$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS1.M.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS2
proc <- procrustes(MTB.DS2.MDS.b.sm$vectors[,1:2],MTG.DS2.MDS.b$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.MDS.b.sm$vectors[,1:2],MTG.DS2.MDS.b$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS2.M.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#Procrustes jaccard-PCoA
#MTB.DS1 vs MTG.DS1
proc <- procrustes(MTB.DS1.MDS.j$vectors[,1:2],MTG.DS1.MDS.j$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.MDS.j$vectors[,1:2],MTG.DS1.MDS.j$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS1.M.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS1 vs MTG.DS2
proc <- procrustes(MTB.DS1.MDS.j.sm$vectors[,1:2],MTG.DS2.MDS.j$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.MDS.j.sm$vectors[,1:2],MTG.DS2.MDS.j$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS1-MTG.DS2.M.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS1
proc <- procrustes(MTB.DS2.MDS.j$vectors[,1:2],MTG.DS1.MDS.j$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.MDS.j$vectors[,1:2],MTG.DS1.MDS.j$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS1.M.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
#MTB.DS2 vs MTG.DS2
proc <- procrustes(MTB.DS2.MDS.j.sm$vectors[,1:2],MTG.DS2.MDS.j$vectors[,1:2],symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.MDS.j.sm$vectors[,1:2],MTG.DS2.MDS.j$vectors[,1:2], scores = "sites", permutations = 9999)
pdf("figures/figure4/beta.P.MTB.DS2-MTG.DS2.M.j.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="")
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target")
points(proc,pch=16,col="#d55e00",display = "rotated")
text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5))
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
### Custom Procrustes
##all data
proc <- procrustes(MTB.DS1.nMDS.b$points,MTG.DS1.nMDS.b$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS1.nMDS.b$points,MTG.DS1.nMDS.b$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/custom.beta.MTB.DS1-MTG.DS1.NM.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="",add=TRUE)
#lines(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),col="grey80",lwd=3)
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target",cex=2)
points(proc,pch=16,col="#d55e00",display = "rotated",cex=2)
shadowtext(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5),cex=0.7,col="black",bg="white")
#text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5),cex=0.7)
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
##animal data
proc <- procrustes(MTB.DS2.nMDS.b.sm$points,MTG.DS2.nMDS.b$points,symmetric = TRUE,scale = TRUE)
summary(proc)
proc.t <- protest(MTB.DS2.nMDS.b.sm$points,MTG.DS2.nMDS.b$points, scores = "sites", permutations = 9999)
pdf("figures/figure4/custom.beta.MTB.DS2-MTG.DS2.NM.b.pdf",height = 5,width = 5)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(proc,type = "n",cex = 0.8,pch=16,main="")
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "white", border = NA)
par(new = TRUE)
plot(proc,type = "n",cex = 0.8,pch=16,main="",add=TRUE)
#lines(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),col="grey80",lwd=3)
lines(proc,type="segments",col="grey")
points(proc,pch=16,col="#4583C4",display = "target",cex=2)
points(proc,pch=16,col="#d55e00",display = "rotated",cex=2)
shadowtext(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5),cex=0.7,col="black",bg="white")
#text(((proc$Yrot[,1]+proc$X[,1])/2),((proc$Yrot[,2]+proc$X[,2])/2),labels=rownames(proc$Yrot),adj=c(0.5,-0.5),cex=0.7)
legend("topleft",legend=c(paste0("SS = ",round(proc.t$ss,3)),
paste0("p = ",round(proc.t$signif,3))),text.col = "red",bty="n")
dev.off()
####====4.0 Taxonomy Down the Core  ====####
##Domain level taxonomy
Domain.A <- minAbundance(CountTable(as.character(taxPR2.f$tax.Domain),euk[,1:88],output = "Abundance"),minAbun=0.01)
Domain.C <- minAbundance(CountTable(as.character(taxPR2.f$tax.Domain),euk[,1:88],output = "Count"),minAbun=0.01)
Domain.A.prop <- as.matrix(prop.table(as.matrix(Domain.A),margin = 2))
Domain.C.prop <- as.matrix(prop.table(as.matrix(Domain.C),margin = 2))
row.names(Domain.A.prop)[1] <- "Unknown"
row.names(Domain.C.prop)[1] <- "Unknown"
pdf("figures/tax.domain.pdf",width = 12,height = 9)
par(mfrow=c(2,1),mar=c(5.1, 4.1, 1.1, 6.1),xpd=TRUE)
barplot(Domain.A.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Domain.A.prop)[1])),ylab="Read Abundance")
legend(105,0.8,rev(rownames(Domain.A.prop)),fill=getPalette(dim(Domain.A.prop)[1]),cex=0.9,bty = "n",y.intersp=0.75)
barplot(Domain.C.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Domain.C.prop)[1])),ylab="ASV Counts")
legend(105,0.8,rev(rownames(Domain.C.prop)),fill=getPalette(dim(Domain.C.prop)[1]),cex=0.9,bty = "n",y.intersp=0.75)
dev.off()
##Supergroup level taxonomy
Supergroup.A <- minAbundance(CountTable(as.character(taxPR2.f$tax.Supergroup),euk[,1:88],output = "Abundance"),minAbun=0.01)
Supergroup.C <- minAbundance(CountTable(as.character(taxPR2.f$tax.Supergroup),euk[,1:88],output = "Count"),minAbun=0.01)
Supergroup.A.prop <- as.matrix(prop.table(as.matrix(Supergroup.A),margin = 2))
Supergroup.C.prop <- as.matrix(prop.table(as.matrix(Supergroup.C),margin = 2))
row.names(Supergroup.A.prop)[1] <- "Unknown"
row.names(Supergroup.C.prop)[1] <- "Unknown"
pdf("figures/tax.supergroup.pdf",width = 12,height = 9)
par(mfrow=c(2,1),mar=c(5.1, 4.1, 1.1, 6.1),xpd=TRUE)
barplot(Supergroup.A.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Supergroup.A.prop)[1])),ylab="Read Abundance")
legend(105,0.8,rev(rownames(Supergroup.A.prop)),fill=getPalette(dim(Supergroup.A.prop)[1]),cex=0.9,bty = "n",y.intersp=0.75)
barplot(Supergroup.C.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Supergroup.C.prop)[1])),ylab="ASV Counts")
legend(105,0.8,rev(rownames(Supergroup.C.prop)),fill=getPalette(dim(Supergroup.C.prop)[1]),cex=0.9,bty = "n",y.intersp=0.75)
dev.off()
##Division level taxonomy
Division.A <- minAbundance(CountTable(as.character(taxPR2.f$tax.Division),euk[,1:88],output = "Abundance"),minAbun=0.01)
Division.C <- minAbundance(CountTable(as.character(taxPR2.f$tax.Division),euk[,1:88],output = "Count"),minAbun=0.01)
Division.A.prop <- as.matrix(prop.table(as.matrix(Division.A),margin = 2))
Division.C.prop <- as.matrix(prop.table(as.matrix(Division.C),margin = 2))
row.names(Division.A.prop)[1] <- "Unknown"
row.names(Division.C.prop)[1] <- "Unknown"
pdf("figures/tax.Division.pdf",width = 12,height = 9)
par(mfrow=c(2,1),mar=c(5.1, 4.1, 1.1, 6.1),xpd=TRUE)
barplot(Division.A.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Division.A.prop)[1])),ylab="Read Abundance")
legend(105,0.8,rev(rownames(Division.A.prop)),fill=getPalette(dim(Division.A.prop)[1]),cex=0.9,bty = "n",y.intersp=0.75)
barplot(Division.C.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Division.C.prop)[1])),ylab="ASV Counts")
legend(105,0.8,rev(rownames(Division.C.prop)),fill=getPalette(dim(Division.C.prop)[1]),cex=0.9,bty = "n",y.intersp=0.75)
dev.off()
##Family level taxonomy
Family.A <- minAbundance(CountTable(as.character(taxPR2.f$tax.Family),euk[,1:88],output = "Abundance"),minAbun=0.01)
Family.C <- minAbundance(CountTable(as.character(taxPR2.f$tax.Family),euk[,1:88],output = "Count"),minAbun=0.01)
Family.A.prop <- as.matrix(prop.table(as.matrix(Family.A),margin = 2))
Family.C.prop <- as.matrix(prop.table(as.matrix(Family.C),margin = 2))
row.names(Family.A.prop)[1] <- "Unknown"
row.names(Family.C.prop)[1] <- "Unknown"
pdf("figures/tax.Family.pdf",width = 12,height = 9)
par(mfrow=c(2,1),mar=c(5.1, 4.1, 1.1, 6.1),xpd=TRUE)
barplot(Family.A.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Family.A.prop)[1])),ylab="Read Abundance")
legend(108,1,rev(rownames(Family.A.prop)),fill=getPalette(dim(Family.A.prop)[1]),cex=0.5,bty = "n",y.intersp=0.75)
barplot(Family.C.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Family.C.prop)[1])),ylab="ASV Counts")
legend(108,1,rev(rownames(Family.C.prop)),fill=getPalette(dim(Family.C.prop)[1]),cex=0.4,bty = "n",y.intersp=0.75)
dev.off()
barplot(Family.A.prop,las=2,cex.names=0.6,col=rev(getPalette(dim(Family.A.prop)[1])),ylab="Read Abundance",horiz=TRUE)
barplot(Family.A.prop,las=1,cex.names=0.6,col=rev(getPalette(dim(Family.A.prop)[1])),ylab="Read Abundance",horiz=TRUE)
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 4.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop, horiz=TRUE, las=2, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Use horizontal bars
legend(0.8 * max(Family.A.prop), 108, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 4.1), xpd=TRUE)  # Adjust margins
barplot(rev(Family.A.prop), horiz=TRUE, las=2, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
barplot(rev(Family.A.prop), horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
rev(Family.A.prop)
Family.A.prop
Family.A.prop[1,]
Family.A.prop[,1]
dim(Family.A.prop)
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(0.8 * max(Family.A.prop), length(Family.A.prop), rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
0.8 * max(Family.A.prop)
length(Family.A.prop)
legend(108,0.8, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
legend(0.8,108, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
pdf("figures/tax.Family.2.rotated.pdf", width = 8, height = 12)  # Portrait layout
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 4.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(0.8,108, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
dev.off()
par(mfrow=c(1,1), mar=c(5.1, 7.1, 7.1, 4.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 7.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 12.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(1.2,108, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
legend(1.1,108, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
pdf("figures/tax.Family.2.rotated.pdf", width = 8, height = 12)  # Portrait layout
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 12.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(1.1,108, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
dev.off()
pdf("figures/tax.Family.2.rotated.pdf", width = 10, height = 12)  # Portrait layout
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 12.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(1.1,67, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
dev.off()
pdf("figures/tax.Family.2.rotated.pdf", width = 10, height = 12)  # Portrait layout
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 12.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.8,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(1.1,67, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.5, bty="n", y.intersp=0.75)  # Adjust legend
dev.off()
pdf("figures/tax.Family.2.rotated.pdf", width = 10, height = 12)  # Portrait layout
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 12.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(1.1,67, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.6, bty="n", y.intersp=0.75)  # Adjust legend
dev.off()
pdf("figures/tax.Family.2.rotated.pdf", width = 10, height = 12)  # Portrait layout
par(mfrow=c(1,1), mar=c(5.1, 7.1, 1.1, 12.1), xpd=TRUE)  # Adjust margins
barplot(Family.A.prop[,dim(Family.A.prop)[2]:1], horiz=TRUE, las=1, cex.names=0.6,
col=rev(getPalette(dim(Family.A.prop)[1])), xlab="Read Abundance")  # Flip order & rotate
legend(1.05,75, rev(rownames(Family.A.prop)),
fill=getPalette(dim(Family.A.prop)[1]), cex=0.7, bty="n", y.intersp=0.75)  # Adjust legend
dev.off()
