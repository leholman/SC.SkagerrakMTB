filter(MAP_damage > max)
filtered_data_genus_max
#add columns
filtered_data_genus_max <- filtered_data_genus_max %>%
mutate(Col_fact = "Outlier_max")
filtered_data_genus_max <- filtered_data_genus_max %>%
mutate(Filtering = "Ancient")
#making one table all genuses
filtered_data_genus_all <- rbind(filtered_data_genus, filtered_data_genus_max, filtered_data_genus_min)
filtered_data_genus_all <- filtered_data_genus_all[filtered_data_genus_all$tax_name!="Loxodonta",]
# Filter the joined data frame based on the minimum and maximum values for only Metazoa
filtered_data_metazoan <- filtered_data_genus_all %>% filter(grepl("Metazoa",tax_path), grepl("\\bgenus\\b", tax_rank))
filtered_data_metazoan$Age <- metadataAge$Median[match(gsub("^[^-]+-[^-]+-([^_]+)_.*$", "\\1", filtered_data_metazoan$sample), metadataAge$Sample)]
###save csv
write.csv(filtered_data_metazoan, file = "cleanedData/filtered_metazoan_all.csv")
write.csv(filtered_data_genus_all, file = "cleanedData/filtered_genus_all.csv")
#####ORIGINAL####
#plot metazoan reads and identify outliers based on the damage model
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.5) +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
dev.off()
#####LUKE's version ####
#plot metazoan reads and identify outliers based on the damage model
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.3) +
geom_line(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
#scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
dev.off()
View(joined_data)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.5) +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.3) +
geom_line(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
#scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
#####ORIGINAL####
#plot metazoan reads and identify outliers based on the damage model
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.5) +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
dev.off()
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.3) +
geom_line(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
#scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.5) +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
dev.off()
ggplot() +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
xlab("Age in Years BP")
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
#####ORIGINAL####
#plot metazoan reads and identify outliers based on the damage model
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
xlab("Age in Years BP")
ggplot() +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
xlab("Age in Years BP")
#####ORIGINAL####
#plot metazoan reads and identify outliers based on the damage model
pdf(file = "figures/OLDMTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.5) +
geom_line(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = mfd, aes(x=age, y=DNAdamage, color=category), size = 2) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
dev.off()
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.3) +
geom_line(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
#scale_size_continuous(trans="sqrt") +
xlab("Age in Years BP")
dev.off()
View(euk.selectedTaxa.long)
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 9, height = 6)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.3) +
geom_line(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
#scale_size_continuous(trans="sqrt") +
xlab("Cal Years BP")
dev.off()
View(mfd)
pdf(file = "figures/MTG.DNAdamageJitterPlot_finalAnimals100readsWithOutliers.pdf", width = 7, height = 5)
ggplot() +
geom_jitter(data = subset(joined_data, grepl("Metazoa", tax_path)), aes(x=Age, y=MAP_damage, size = N_reads), alpha =0.3) +
geom_line(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
scale_color_brewer(palette="Spectral") +
geom_point(data = pb9.w, aes(x=Age, y=value, color=variable), size = 1) +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage < min ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
geom_text(data = subset(joined_data, grepl("Metazoa", tax_path) & MAP_damage > max ), aes(x =Age, y = MAP_damage, label = tax_name), size = 3, color = "black") +
#scale_size_continuous(trans="sqrt") +
xlab("Cal Years BP")
dev.off()
View(euk.selectedTaxa.long)
View(euk.selectedTaxa.long)
MTG.binary.DS1 <- make_binary(MTG.wide.DS1,1)[,-1]
MTG.binary.DS1 <- MTG.binary.DS1[,!grepl("NTC|BLANK",names(MTG.binary.DS1))]
MTG.binary.DS2 <- make_binary(MTG.wide.DS2,1)[,-1]
MTG.binary.DS3 <- make_binary(MTG.wide.DS3,1)[,-1]
MTG.binary.DS4 <- make_binary(MTG.wide.DS4,1)[,-1]
MTB.binary.DS1 <- make_binary(MTB.wide.DS1,3)
MTB.binary.DS2 <- make_binary(MTB.wide.DS2,3)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS1),1,8)),dates$sampleID)],
colSums(MTG.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS1 Genus Richness",
xlim=c(0,8400))
pdf("figures/figure1/richness.MTG.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS1),1,8)),dates$sampleID)],
colSums(MTG.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS1 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure1/richness.MTG.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS2),1,8)),dates$sampleID)],
colSums(MTG.binary.DS2),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS2 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure1/richness.MTG.DS3.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS3),1,8)),dates$sampleID)],
colSums(MTG.binary.DS3),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS3 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure1/richness.MTG.DS4.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS4),1,8)),dates$sampleID)],
colSums(MTG.binary.DS4),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS4 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure1/richness.MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTB.binary.DS1),1,8)),dates$sampleID)],
colSums(MTB.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="MTB.DS1 ASV Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure1/richness.MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTB.binary.DS2),1,8)),dates$sampleID)],
colSums(MTB.binary.DS2),
pch=16,
xlab="CalYrBP",
ylab="MTB.DS2 ASV Richness",
xlim=c(0,8400))
dev.off()
colSums(MTG.binary.DS1)
colSums(MTB.binary.DS1)
pdf("figures/figure1/richness.comp.MTG.DS1-MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS1),
colSums(MTB.binary.DS1),
pch=16,
xlab="MTG.DS1",
ylab="MTB.DS1")
test <- cor.test(colSums(MTG.binary.DS1),colSums(MTB.binary.DS1))
abline(lm(colSums(MTB.binary.DS1)~colSums(MTG.binary.DS1)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
pdf("figures/figure1/richness.comp.MTG.DS1-MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS1),
colSums(MTB.binary.DS2),
pch=16,
xlab="MTG.DS1",
ylab="MTB.DS2")
test <- cor.test(colSums(MTG.binary.DS1),colSums(MTB.binary.DS2))
abline(lm(colSums(MTB.binary.DS2)~colSums(MTG.binary.DS1)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
index <- match(names(colSums(MTG.binary.DS2)),names(colSums(MTB.binary.DS1)))
pdf("figures/figure1/richness.comp.MTG.DS2-MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS2),
colSums(MTB.binary.DS1)[index],
pch=16,
xlab="MTG.DS2",
ylab="MTB.DS1")
test <- cor.test(colSums(MTG.binary.DS2),colSums(MTB.binary.DS1)[index])
abline(lm(colSums(MTB.binary.DS1)[index]~colSums(MTG.binary.DS2)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
index <- match(names(colSums(MTG.binary.DS2)),names(colSums(MTB.binary.DS2)))
pdf("figures/figure1/richness.comp.MTG.DS2-MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS2),
colSums(MTB.binary.DS2)[index],
pch=16,
xlab="MTG.DS2",
ylab="MTB.DS2")
test <- cor.test(colSums(MTG.binary.DS2),colSums(MTB.binary.DS2)[index])
abline(lm(colSums(MTB.binary.DS2)[index]~colSums(MTG.binary.DS2)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
View(X10)
pdf("figures/figure2/richness.MTG.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS1),1,8)),dates$sampleID)],
colSums(MTG.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="Metagenomic Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTG.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS2),1,8)),dates$sampleID)],
colSums(MTG.binary.DS2),
pch=16,
xlab="CalYrBP",
ylab="Metagenomic Metazoa Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTG.DS3.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS3),1,8)),dates$sampleID)],
colSums(MTG.binary.DS3),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS3 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTG.DS4.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS4),1,8)),dates$sampleID)],
colSums(MTG.binary.DS4),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS4 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTB.binary.DS1),1,8)),dates$sampleID)],
colSums(MTB.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="Metabarcoding ASV Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTB.binary.DS2),1,8)),dates$sampleID)],
colSums(MTB.binary.DS2),
pch=16,
xlab="CalYrBP",
ylab="Metabarcoding Metazoa ASV Richness",
xlim=c(0,8400))
dev.off()
colSums(MTG.binary.DS1)
colSums(MTB.binary.DS1)
pdf("figures/figure1/richness.comp.MTG.DS1-MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS1),
colSums(MTB.binary.DS1),
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS1),colSums(MTB.binary.DS1))
abline(lm(colSums(MTB.binary.DS1)~colSums(MTG.binary.DS1)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
pdf("figures/figure1/richness.comp.MTG.DS1-MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS1),
colSums(MTB.binary.DS2),
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS1),colSums(MTB.binary.DS2))
abline(lm(colSums(MTB.binary.DS2)~colSums(MTG.binary.DS1)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
#here we make a little index to subset the MTB dataset as MTG loses a sample
index <- match(names(colSums(MTG.binary.DS2)),names(colSums(MTB.binary.DS1)))
pdf("figures/figure1/richness.comp.MTG.DS2-MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS2),
colSums(MTB.binary.DS1)[index],
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS2),colSums(MTB.binary.DS1)[index])
abline(lm(colSums(MTB.binary.DS1)[index]~colSums(MTG.binary.DS2)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
index <- match(names(colSums(MTG.binary.DS2)),names(colSums(MTB.binary.DS2)))
pdf("figures/figure1/richness.comp.MTG.DS2-MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS2),
colSums(MTB.binary.DS2)[index],
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS2),colSums(MTB.binary.DS2)[index])
abline(lm(colSums(MTB.binary.DS2)[index]~colSums(MTG.binary.DS2)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
## Plots
pdf("figures/figure2/richness.MTG.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS1),1,8)),dates$sampleID)],
colSums(MTG.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="Metagenomic Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTG.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS2),1,8)),dates$sampleID)],
colSums(MTG.binary.DS2),
pch=16,
xlab="CalYrBP",
ylab="Metagenomic Metazoa Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTG.DS3.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS3),1,8)),dates$sampleID)],
colSums(MTG.binary.DS3),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS3 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTG.DS4.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTG.binary.DS4),1,8)),dates$sampleID)],
colSums(MTG.binary.DS4),
pch=16,
xlab="CalYrBP",
ylab="MTG.DS4 Genus Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTB.binary.DS1),1,8)),dates$sampleID)],
colSums(MTB.binary.DS1),
pch=16,
xlab="CalYrBP",
ylab="Metabarcoding ASV Richness",
xlim=c(0,8400))
dev.off()
pdf("figures/figure2/richness.MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(dates$Median[match(as.factor(substr(names(MTB.binary.DS2),1,8)),dates$sampleID)],
colSums(MTB.binary.DS2),
pch=16,
xlab="CalYrBP",
ylab="Metabarcoding Metazoa ASV Richness",
xlim=c(0,8400))
dev.off()
colSums(MTG.binary.DS1)
colSums(MTB.binary.DS1)
pdf("figures/figure2/richness.comp.MTG.DS1-MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS1),
colSums(MTB.binary.DS1),
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS1),colSums(MTB.binary.DS1))
abline(lm(colSums(MTB.binary.DS1)~colSums(MTG.binary.DS1)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
pdf("figures/figure2/richness.comp.MTG.DS1-MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS1),
colSums(MTB.binary.DS2),
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS1),colSums(MTB.binary.DS2))
abline(lm(colSums(MTB.binary.DS2)~colSums(MTG.binary.DS1)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
#here we make a little index to subset the MTB dataset as MTG loses a sample
index <- match(names(colSums(MTG.binary.DS2)),names(colSums(MTB.binary.DS1)))
pdf("figures/figure2/richness.comp.MTG.DS2-MTB.DS1.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS2),
colSums(MTB.binary.DS1)[index],
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS2),colSums(MTB.binary.DS1)[index])
abline(lm(colSums(MTB.binary.DS1)[index]~colSums(MTG.binary.DS2)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
index <- match(names(colSums(MTG.binary.DS2)),names(colSums(MTB.binary.DS2)))
pdf("figures/figure2/richness.comp.MTG.DS2-MTB.DS2.pdf",width = 4,height = 4)
par(mar=c(4.1, 4.1, 1.1, 1.1))
plot(colSums(MTG.binary.DS2),
colSums(MTB.binary.DS2)[index],
pch=16,
xlab="Genera",
ylab="ASVs")
test <- cor.test(colSums(MTG.binary.DS2),colSums(MTB.binary.DS2)[index])
abline(lm(colSums(MTB.binary.DS2)[index]~colSums(MTG.binary.DS2)),col="red")
legend("topright",legend=c(paste0("Corr = ",round(unname(test$estimate),3)),
paste0("p =",signif(test$p.value,3))),
text.col="red",bty="n")
dev.off()
