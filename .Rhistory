View(metadata)
metadata$SampleID.2 <- gsub(".*(MD9-\\d{4}).*","\\1",metadata$Sample)
View(metadata)
gsub_expr <- "^(?!MD9).*-.*-(.*)$"
metadata$SampleID.2 <-gsub(gsub_expr, "\\1", metadata$SampleID.2, perl=TRUE)
View(metadata)
metadata <- read.csv("metadataAge.csv")
metadata$SampleID.2 <- gsub(".*(MD9-\\d{4}).*","\\1",metadata$Sample)
View(metadata)
gsub_expr <- "^(?!MD9).*-.*-(.*)$"
gsub(gsub_expr, "\\1", metadata$SampleID.2, perl=TRUE)
metadata$SampleID.2
inputdata <- r100.r100.metazoa
inputdata <- r100.metazoa
inputdata$sample2 <- factor(inputdata$sample2,levels= sort(unique(inputdata$sample2),decreasing = TRUE))
inputdata.genus <- inputdata[inputdata$tax_rank=="genus",]
genus.inputdata.wide <- dcast(inputdata.genus, tax_name ~ sample2, value.var="N_reads")
genus.inputdata.wide.m <- as.matrix(genus.inputdata.wide[,2:length(genus.inputdata.wide[1,])])
####====0.1 Load data====####
r100.metazoa <- read.csv("processeddata/r100.metazoa.csv",row.names = 1)
####====0.1 Load data====####
r100.metazoa <- read.csv("rawdata/r100.metazoa.csv",row.names = 1)
####====0.1 Load data====####
r100.metazoa <- read.csv("rawdata/metaG.r100.metazoa.csv",row.names = 1)
inputdata <- r100.metazoa
inputdata$sample2 <- factor(inputdata$sample2,levels= sort(unique(inputdata$sample2),decreasing = TRUE))
inputdata.genus <- inputdata[inputdata$tax_rank=="genus",]
genus.inputdata.wide <- dcast(inputdata.genus, tax_name ~ sample2, value.var="N_reads")
genus.inputdata.wide.m <- as.matrix(genus.inputdata.wide[,2:length(genus.inputdata.wide[1,])])
rownames(genus.inputdata.wide.m) <- genus.inputdata.wide$tax_name
genus.inputdata.wide.m[is.na(genus.inputdata.wide.m)] <- 0
View(genus.inputdata.wide)
par(mar=c(7.1,7.1,1.1,1.1))
plot(as.numeric(inputdata.genus$sample2),
as.numeric(as.factor(inputdata.genus$tax_name)),
xlab="",
ylab="",
axes=FALSE,
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(inputdata.genus$sample2)),labels = levels(inputdata.genus$sample2),las=2)
axis(2,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
inputdata.genus$tax_name
inputdata.genus$sample2
as.character(inputdata.genus$sample2)
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)]
plot(metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
as.numeric(as.factor(inputdata.genus$tax_name)),
xlab="",
ylab="",
axes=FALSE,
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(inputdata.genus$sample2)),labels = levels(inputdata.genus$sample2),las=2)
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)]
inputdata$sample2 <- factor(inputdata$sample2,levels= sort(unique(inputdata$sample2),decreasing = TRUE))
inputdata.genus <- inputdata[inputdata$tax_rank=="genus",]
genus.inputdata.wide <- dcast(inputdata.genus, tax_name ~ sample2, value.var="N_reads")
genus.inputdata.wide.m <- as.matrix(genus.inputdata.wide[,2:length(genus.inputdata.wide[1,])])
rownames(genus.inputdata.wide.m) <- genus.inputdata.wide$tax_name
genus.inputdata.wide.m[is.na(genus.inputdata.wide.m)] <- 0
inputdata.genus$ancient <- rep(1,length(inputdata.genus$sample))
inputdata.genus$ancient[inputdata.genus$D_max>0.1 & inputdata.genus$lambda_LR>2] <- 2
View(inputdata.genus)
par(mar=c(7.1,7.1,1.1,1.1))
plot(metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
as.numeric(as.factor(inputdata.genus$tax_name)),
xlab="",
ylab="",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
par(mar=c(7.1,7.1,1.1,1.1))
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="",
ylim=c(8500,0)
frame.plot=TRUE,
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="",
ylim=c(8500,0),
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(2,at=1:length(levels(inputdata.genus$sample2)),labels = levels(inputdata.genus$sample2),las=2)
axis(1,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="",
ylim=c(8500,0),
xaxt="n",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
par(mar=c(7.1,7.1,1.1,1.1))
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="Years Cal BP",
ylab="",
ylim=c(8500,0),
xaxt="n",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
par(mar=c(7.1,7.1,1.1,1.1))
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="Years Cal BP",
ylim=c(8500,0),
xaxt="n",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="Years Cal BP",
ylim=c(8500,0),
xaxt="n",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient)
#cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
View(genus.inputdata.wide)
View(genus.inputdata.wide)
pdf("figures/metazoa.r100.pdf",height = 6,width = 5)
par(mar=c(7.1,7.1,1.1,1.1))
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="Years Cal BP",
ylim=c(8500,0),
xaxt="n",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient)
#cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
dev.off()
pdf("figures/metazoa.r100.pdf",height = 6,width = 5)
par(mar=c(7.1,7.1,1.1,1.1))
plot(as.numeric(as.factor(inputdata.genus$tax_name)),
metadata$Mean[match(as.character(inputdata.genus$sample2),metadata$SampleID.2)],
xlab="",
ylab="Years Cal BP",
ylim=c(8500,0),
xaxt="n",
frame.plot=TRUE,
pch=16,
col=inputdata.genus$ancient,
cex=as.numeric(as.character(cut(inputdata.genus$N_reads,breaks=c(50,100,200,300,500,1000,3000,100000000),labels=c(0,0.2,0.4,0.8,1.2,1.6,1.8)))))
axis(1,at=1:length(levels(as.factor(inputdata.genus$tax_name))),labels = levels(as.factor(inputdata.genus$tax_name)),las=2,cex.axis=0.5)
dev.off()
library(vegan)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv")
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv")
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv")
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv")
View(euk)
View(euk.Nreps)
View(metadata)
colnames(euk)
colnames(euk[,1:89])
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
colnames(euk[,1:88])
gsub(".*(MD9.\\d{4}).*","\\1",colnames(euk[,1:88]))
gsub(".","-",gsub(".*(MD9.\\d{4}).*","\\1",colnames(euk[,1:88])))
gsub("\.","-",gsub(".*(MD9.\\d{4}).*","\\1",colnames(euk[,1:88])))
gsub("\\.","-",gsub(".*(MD9.\\d{4}).*","\\1",colnames(euk[,1:88])))
colnames(euk[,1:88])
gsub(".*(MD9.\\d{4}).*","\\1",colnames(euk[,1:88]))
colnames(euk[,1:88])
gsub(".*(MD9.\\d{4})\\..*","\\1",colnames(euk[,1:88]))
gsub(".*(MD9.\\d{4})\\.","\\1",colnames(euk[,1:88]))
gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88]))
gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88])))
colnames(euk[,1:88]) <- gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88])))
View(euk)
colnames(euk[,1:88])
colnames(euk)
c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88]))),colnames(euk[,89:99])
)
View(euk)
colnames(euk) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88]))),colnames(euk[,89:99]))
View(euk)
View(euk)
colnames(euk.Nreps)
#Correct col names
gsub(".*(MD9.\\d{4})","\\1",colnames(euk.Nreps[,1:88]))
colnames(euk.Nreps[,1:88])
colnames(euk.Nreps[1:88])
gsub(".*(MD9.\\d{4})","\\1",colnames(euk.Nreps[,1:11]))
c(gsub("\\.","-",colnames(euk[,1:11])),colnames(euk[,12:22]))
c(gsub("\\.","-",colnames(euk.Nreps[,1:11])),colnames(euk.Nreps[,12:22]))
colnames(euk.Nreps) <- c(gsub("\\.","-",colnames(euk.Nreps[,1:11])),colnames(euk.Nreps[,12:22]))
colnames(euk.Nreps) <- c(gsub("\\.","-",colnames(euk.Nreps[,1:11])),colnames(euk.Nreps[,12:22]))
View(euk.Nreps)
View(euk)
View(euk.Nreps)
euk.Nreps.binary <- euk.Nreps
#little richness plot
euk.Nreps.binary <- euk.Nreps
euk.Nreps.binary[euk.Nreps.binary<1] <- 0
euk.Nreps.binary[euk.Nreps.binary<1] <- 0
euk.Nreps.binary[euk.Nreps.binary>0] <- 1
#little richness plot
euk.Nreps.binary <- euk.Nreps
euk.Nreps.binary[euk.Nreps.binary<1] <- 0
euk.Nreps.binary[euk.Nreps.binary>0] <- 1
View(euk.Nreps.binary)
#little richness plot
euk.Nreps.binary <- euk.Nreps
euk.Nreps.binary[euk.Nreps.binary<2] <- 0
euk.Nreps.binary[euk.Nreps.binary>0] <- 1
View(euk.Nreps.binary)
colSums(euk.Nreps.binary)
colSums(euk.Nreps.binary[,1:11])
View(r100.metazoa)
View(inputdata.genus)
View(metadata)
View(genus.inputdata.wide.m)
View(euk.Nreps.binary)
euk.Nreps.binary$assignmentQual
#little richness plot
euk.Nreps.binary <- euk.Nreps[,1:11]
euk.Nreps.binary[euk.Nreps.binary<2] <- 0
euk.Nreps.binary[euk.Nreps.binary>0] <- 1
colSums(euk.Nreps.binary)
euk.Nreps$assignmentQual
euk.Nreps$assignmentQual == "High" | euk.Nreps$assignmentQual == "High-MH" | euk.Nreps$assignmentQual == "Low"
colSums(euk.Nreps.binary[euk.Nreps$assignmentQual == "High" | euk.Nreps$assignmentQual == "High-MH" | euk.Nreps$assignmentQual == "Low" ,])
euk.Nreps.binary[euk.Nreps$assignmentQual == "High" | euk.Nreps$assignmentQual == "High-MH" | euk.Nreps$assignmentQual == "Low" ,]
test <- euk.Nreps.binary[euk.Nreps$assignmentQual == "High" | euk.Nreps$assignmentQual == "High-MH" | euk.Nreps$assignmentQual == "Low" ,]
View(test)
colSums(low)
colSums(test)
str(test)
View(euk)
View(euk.Nreps)
euk.Nreps$phylum
table(euk.Nreps$phylum)
table(euk.Nreps$phylum[euk.Nreps$assignmentQual=="High"])
sort(table(euk.Nreps$phylum[euk.Nreps$assignmentQual=="High"]))
sort(table(euk.Nreps$phylum[euk.Nreps$assignmentQual=="High" | euk.Nreps$assignmentQual=="High-MH"]))
sort(table(euk.Nreps$phylum[euk.Nreps$assignmentQual=="High" | euk.Nreps$assignmentQual=="High-MH" & euk.Nreps$superkingdom=="Eukaryota"]))
View(euk.Nreps)
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH"]
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH",]
euk.Nreps$superkingdom
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH" & euk.Nreps$superkingdom!="Bacteria"& euk.Nreps$superkingdom!="Archaea",]
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH" ,]
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH" & euk.Nreps$superkingdom!="Bacteria"& euk.Nreps$superkingdom!="Archaea",]
View(euk.Nreps.high)
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH",]
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High",]
| euk.Nreps$assignmentQual=="High-MH"
euk.Nreps.high <- euk.Nreps[euk.Nreps$assignmentQual=="High"| euk.Nreps$assignmentQual=="High-MH",]
euk.Nreps.high <- euk.Nreps[ euk.Nreps$assignmentQual=="High-MH",]
euk.Nreps.high <- euk.Nreps[ euk.Nreps$assignmentQual=="High-MH",]
View(euk.Nreps.high)
euk.Nreps$assignmentQual=="High-MH"
euk.Nreps$assignmentQual=="High"
euk.Nreps$assignmentQual=="High-MH" | euk.Nreps$assignmentQual=="High"
table(euk.Nreps$assignmentQual=="High-MH")
table(euk.Nreps$assignmentQual=="High")
tabel(euk.Nreps$assignmentQual)
table(euk.Nreps$assignmentQual)
View(euk.Nreps)
is.na(euk.Nreps$assignmentQual)
table(is.na(euk.Nreps$assignmentQual))
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual)]
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps[ euk.Nreps$assignmentQual=="High-MH",]
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps[ euk.Nreps.high$assignmentQual=="High-MH",]
View(euk.Nreps.high)
View(euk.Nreps.high)
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
View(euk.Nreps.high)
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH",]
View(euk.Nreps.high)
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH"|euk.Nreps.high$assignmentQual=="High",]
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH"|euk.Nreps.high$assignmentQual=="High",]
View(euk.Nreps.high)
View(euk.Nreps.high)
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH"|euk.Nreps.high$assignmentQual=="High" & euk.Nreps.high$superkingdom !="Bacteria"& euk.Nreps.high$superkingdom !="Archea",]
View(euk.Nreps.high)
euk.Nreps.high$superkingdom !="Bacteria"
& euk.Nreps.high$superkingdom !="Bacteria" & euk.Nreps.high$superkingdom !="Archaea"
euk.Nreps.high$superkingdom !="Bacteria" & euk.Nreps.high$superkingdom !="Archaea"
p
p
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH"|euk.Nreps.high$assignmentQual=="High" & euk.Nreps.high$superkingdom !="Bacteria" & euk.Nreps.high$superkingdom !="Archaea",]
View(euk.Nreps.high)
euk.Nreps.high <- euk.Nreps.high[euk.Nreps.high$superkingdom !="Bacteria" ,]
View(euk.Nreps.high)
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH"|euk.Nreps.high$assignmentQual=="High",]
euk.Nreps.high <- euk.Nreps.high[euk.Nreps.high$superkingdom !="Bacteria" ,]
euk.Nreps.high <- euk.Nreps.high[euk.Nreps.high$superkingdom !="Archaea" ,]
View(euk.Nreps.high)
table(euk.Nreps.high$species)
sort(table(euk.Nreps.high$species))
View(euk.Nreps.high)
View(euk.Nreps.high)
vegdist(t(euk.Nreps.high[1:11]))
out <- metaMDS(vegdist(t(euk.Nreps.high[1:11])))
plot(out)
out$stress
out$points
out$points[1]
out$points[1,]
out$points[,1]
plot(out$points[,1],out$points[,2])
plot(out$points[,1],out$points[,2],plot=F)
plot(out$points[,1],out$points[,2],type=NA)
plot(out$points[,1],out$points[,2],type="")
plot(out)
text(out$points[,1],out$points[,2],labels = out$ngrp)
out$data
out$points
rownames(out$points)
text(out$points[,1],out$points[,2],labels = rownames(out$points))
text(out$points[,1]+0.3,out$points[,2],labels = rownames(out$points))
plot(out)
text(out$points[,1],out$points[,2]+0.1,labels = rownames(out$points))
plot(out)
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
plot(out,pch=16)
plot(out)
plot(out)
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
points(out$points[,1],out$points[,2],col="darkred",cex=1.3)
points(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16)
#Little beta div plot
out <- metaMDS(vegdist(t(euk.Nreps.high[1:11])))
plot(out$points[,1],out$points[,2],type="")
plot(out)
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
points(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16)
euk.Nreps.high
euk.Nreps.high[1:11]
colnames(euk.Nreps.high[1:11])
euk <- read.csv("cleanedData/clean.EUK.raw.names.csv.csv",row.names = 1)
euk.Nreps <- read.csv("cleanedData/clean.EUK.raw.names.csv.Nreps.csv",row.names = 1)
#Correct col names
colnames(euk) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk[,1:88]))),colnames(euk[,89:99]))
colnames(euk.Nreps) <- c(gsub("\\.","-",colnames(euk.Nreps[,1:11])),colnames(euk.Nreps[,12:22]))
View(euk.Nreps)
c(gsub("\\.","-",colnames(euk.Nreps[,1:11])),colnames(euk.Nreps[,12:22]))
gsub("\\.","-",colnames(euk.Nreps[,1:11]))
colnames(euk.Nreps) <- c(gsub("\\.","-",gsub(".*(MD9.\\d{4})","\\1",colnames(euk.Nreps[,1:11]))),colnames(euk.Nreps[,12:22]))
View(euk.Nreps)
#plot high quality assignments
euk.Nreps.high <- euk.Nreps[!is.na(euk.Nreps$assignmentQual),]
euk.Nreps.high <- euk.Nreps.high[ euk.Nreps.high$assignmentQual=="High-MH"|euk.Nreps.high$assignmentQual=="High",]
euk.Nreps.high <- euk.Nreps.high[euk.Nreps.high$superkingdom !="Bacteria" ,]
euk.Nreps.high <- euk.Nreps.high[euk.Nreps.high$superkingdom !="Archaea" ,]
sort(table(euk.Nreps$phylum[euk.Nreps$assignmentQual=="High" | euk.Nreps$assignmentQual=="High-MH"]))
#Little beta div plot
out <- metaMDS(vegdist(t(euk.Nreps.high[1:11])))
plot(out$points[,1],out$points[,2],type="")
plot(out)
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
points(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16)
pdf("figures/betadiv.pdf",height = 4,width = 4)
plot(out)
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
points(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16)
dev.off()
pdf("figures/betadiv.pdf",height = 6,width = 6)
plot(out)
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
points(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16)
dev.off()
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16)
min(out$points[,2]
)
min(out$points[,2])+0.1
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,ylim=cmin(out$points[,2])-0.1,max(out$points[,2])+0.1))
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,ylim=c(min(out$points[,2])-0.1,max(out$points[,2])+0.1))
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,
ylim=c(min(out$points[,2])-0.1,max(out$points[,2])+0.1),
xlim=c(min(out$points[,1])-0.1,max(out$points[,1])+0.1))
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
plot(out$points[,1],out$points[,2],type="")
pdf("figures/betadiv.pdf",height = 6,width = 6)
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,
ylim=c(min(out$points[,2])-0.1,max(out$points[,2])+0.1),
xlim=c(min(out$points[,1])-0.1,max(out$points[,1])+0.1))
text(out$points[,1],out$points[,2]+0.02,labels = rownames(out$points))
dev.off()
match(rownames(out$points),metadata$Sample)
metadata$Sample
metadata$Sample2
metadata$SampleID.2
match(rownames(out$points),metadata$SampleID.2)
metadata$Mean[match(rownames(out$points),metadata$SampleID.2)]
pdf("figures/betadiv.pdf",height = 6,width = 6)
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,
ylim=c(min(out$points[,2])-0.1,max(out$points[,2])+0.1),
xlim=c(min(out$points[,1])-0.1,max(out$points[,1])+0.1))
text(out$points[,1],out$points[,2]+0.02,labels = metadata$Mean[match(rownames(out$points),metadata$SampleID.2)])
dev.off()
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,
ylim=c(min(out$points[,2])-0.1,max(out$points[,2])+0.1),
xlim=c(min(out$points[,1])-0.1,max(out$points[,1])+0.1))
ordisurf(out,metadata$Mean[match(rownames(out$points),metadata$SampleID.2)])
pdf("figures/betadiv.pdf",height = 6,width = 6)
plot(out$points[,1],out$points[,2],col="darkred",cex=1.3,pch=16,
ylim=c(min(out$points[,2])-0.1,max(out$points[,2])+0.1),
xlim=c(min(out$points[,1])-0.1,max(out$points[,1])+0.1))
text(out$points[,1],out$points[,2]+0.02,labels = metadata$Mean[match(rownames(out$points),metadata$SampleID.2)])
dev.off()
euk.Nreps.high.binary <- euk.Nreps.high
euk.Nreps.high.binary <- euk.Nreps.high
euk.Nreps.high.binary[euk.Nreps.high.binary<2] <- 0
euk.Nreps.high.binary[euk.Nreps.high.binary>1] <- 1
colsums(euk.Nreps.high.binary)
colSums(euk.Nreps.high.binary)
colSums(euk.Nreps.high.binary[,1:11])
plot(colSums(euk.Nreps.high.binary[,1:11]))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=21,)
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=21)
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16)
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness")
par(mar=c(7.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness")
par(mar=c(1.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness")
par(mar=c(3.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness")
axis(1,at=1:11,labels = metadata$SampleID.2,las=2,cex.axis=0.5)
axis(1,at=1:11,labels = metadata$SampleID.2,las=1,cex.axis=0.5)
axis(1,at=1:11,labels = metadata$SampleID.2,las=1,cex.axis=1)
axis(1,at=1:11,labels = metadata$SampleID.2,las=2,cex.axis=1)
par(mar=c(5.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness")
axis(1,at=1:11,labels = metadata$SampleID.2,las=2,cex.axis=1)
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness",xlab="")
axis(1,at=1:11,labels = metadata$SampleID.2,las=2,cex.axis=1)
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
par(mar=c(5.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
par(mar=c(5.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
pdf("figures/richness.pdf",width = 6.5,height = 5)
par(mar=c(5.1,7.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.pdf",width = 6.5,height = 5)
par(mar=c(5.1,5.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.pdf",width = 6.5,height = 5)
par(mar=c(4.1,5.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.pdf",width = 6.5,height = 5)
par(mar=c(5.1,3.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
dev.off()
pdf("figures/richness.pdf",width = 6.5,height = 5)
par(mar=c(5.1,4.1,1.1,1.1))
plot(colSums(euk.Nreps.high.binary[,1:11]),pch=16,cex=1.5,xaxt="n",ylab="ASV Richness",xlab="")
axis(1,at=1:11,labels = colnames(euk.Nreps.high.binary[,1:11]),las=2,cex.axis=1)
dev.off()
View(euk.Nreps.high)
View(euk.Nreps.high)
